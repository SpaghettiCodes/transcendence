services:
  frontend:
    image: "node:21"
    user: "node"
    working_dir: "/home/node/app"
    volumes:
      - ./frontend:/home/node/app
    ports: 
      - "8080:8080"
    networks:
      - frontend_net
    depends_on:
      - backend
    env_file:
      - .env
    entrypoint: ["./node_modules/.bin/http-server", "--proxy", "http://localhost:8080?"]

  backend:
    build: "./backend"
    tty: true
    depends_on:
      - db
    networks:
      - frontend_net
      - backend_net
    working_dir: "/app"
    volumes:
      - ./backend/src:/app
    ports:
      - "8000:8000"
    expose:
      - "8000"
    env_file:
      - .env

  db:
    image: postgres
    env_file:
      - .env
    networks:
      - backend_net
    volumes:
      - ./data/database:/var/lib/postgresql/data
    expose:
      - "5432"

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - '9090:9090'
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - '3000:3000'
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./grafana/provisioning/dashboard/dashboard.yml:/etc/grafana/provisioning/dashboard/
      - grafana-storage:/var/lib/grafana

volumes:
  prometheus-data: {}
  grafana-storage: {}

networks:
  frontend_net:
  backend_net: